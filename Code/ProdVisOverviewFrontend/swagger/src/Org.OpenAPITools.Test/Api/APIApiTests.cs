/*
 * API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing APIApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class APIApiTests : IDisposable
    {
        private APIApi instance;

        public APIApiTests()
        {
            instance = new APIApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of APIApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' APIApi
            //Assert.IsType<APIApi>(instance);
        }

        /// <summary>
        /// Test GesamttubenanzZielGet
        /// </summary>
        [Fact]
        public void GesamttubenanzZielGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GesamttubenanzZielGet();
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test GesamttubenanzZielPost
        /// </summary>
        [Fact]
        public void GesamttubenanzZielPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int body = null;
            //var response = instance.GesamttubenanzZielPost(body);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ResetBitGet
        /// </summary>
        [Fact]
        public void ResetBitGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.ResetBitGet();
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ResetBitPost
        /// </summary>
        [Fact]
        public void ResetBitPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int body = null;
            //var response = instance.ResetBitPost(body);
            //Assert.IsType<int>(response);
        }

        /// <summary>
        /// Test ServerIDTAA1Get
        /// </summary>
        [Fact]
        public void ServerIDTAA1GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int serverID = null;
            //var response = instance.ServerIDTAA1Get(serverID);
            //Assert.IsType<Object>(response);
        }

        /// <summary>
        /// Test ServerIDTAA2Get
        /// </summary>
        [Fact]
        public void ServerIDTAA2GetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int serverID = null;
            //var response = instance.ServerIDTAA2Get(serverID);
            //Assert.IsType<Object>(response);
        }
    }
}
